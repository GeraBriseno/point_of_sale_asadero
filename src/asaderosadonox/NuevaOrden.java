/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package asaderosadonox;

/**
 *
 * @author Gerardo
 */
import javax.swing.*;
import java.awt.event.*;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.table.*;
import java.util.ArrayList;
import java.awt.print.*;
import javax.print.*;
import java.io.File;
import javax.imageio.ImageIO;
import java.io.ByteArrayOutputStream;
import java.awt.image.BufferedImage;

public class NuevaOrden extends javax.swing.JDialog {

    /**
     * Creates new form NuevaOrden
     */
    public NuevaOrden(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Conexion.mostrarOrdenesActivas(t_ordenesActivas);
        t_ordenesActivas.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2){
            int columnaIdCliente = 0;
            int row = t_ordenesActivas.getSelectedRow();
            
            int idClienteActual = Integer.parseInt(l_idCliente.getText());
            int id_cliente = Integer.parseInt(t_ordenesActivas.getModel().getValueAt(row, columnaIdCliente).toString());
            l_idCliente.setText(""+id_cliente);
            
            if(idClienteActual != id_cliente && idClienteActual != 0)
            {
            Conexion.actualizarOrdenActiva(idClienteActual);
            }
            
            ResultSet rsInfoCliente = Conexion.getInfoClienteOrdenActiva(id_cliente);
            try{
            if(rsInfoCliente.next()){

                String nombre = rsInfoCliente.getString("nombre");
                String telefono = rsInfoCliente.getString("telefono");
                String domicilio = rsInfoCliente.getString("domicilio");
                String referencia = rsInfoCliente.getString("referencia");
                
                tf_nombre.setText(nombre);
                tf_telefono.setText(telefono);
                tf_domicilio.setText(domicilio);
                tf_referencia.setText(referencia);
                
            }
            }
            catch(Exception exc){
                System.out.println(exc);
            }
            Conexion.borrarOrden();
            Conexion.agregarAOrdenDesdeOrdenActiva(id_cliente);
            Conexion.agregarATableOrden(t_orden);
            Conexion.mostrarTotalOrden(t_orden);
            Conexion.mostrarOrdenesActivas(t_ordenesActivas);
            }
        }
        });
    }
    public void closeFrame(){
        super.dispose();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_cancelarNuevaOrden = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_orden = new javax.swing.JTable();
        b_eliminarDeOrden = new javax.swing.JButton();
        b_imprimir = new javax.swing.JButton();
        b_terminarOrden = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        b_mixto = new javax.swing.JButton();
        b_cerdo = new javax.swing.JButton();
        b_cebollas = new javax.swing.JButton();
        b_bebida = new javax.swing.JButton();
        b_tortas = new javax.swing.JButton();
        b_res = new javax.swing.JButton();
        b_combinado = new javax.swing.JButton();
        b_quesadillas = new javax.swing.JButton();
        b_tacos = new javax.swing.JButton();
        b_extras = new javax.swing.JButton();
        b_chiles = new javax.swing.JButton();
        b_chorizo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tf_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        l_domicilio = new javax.swing.JLabel();
        tf_referencia = new javax.swing.JTextField();
        tf_domicilio = new javax.swing.JTextField();
        b_guardarCliente = new javax.swing.JButton();
        l_nombre = new javax.swing.JLabel();
        tf_telefono = new javax.swing.JTextField();
        l_telefono = new javax.swing.JLabel();
        l_idCliente = new javax.swing.JLabel();
        b_editarClienteNuevaOrden = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        t_ordenesActivas = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_cliente = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        t_repartidores = new javax.swing.JTable();
        b_pagado = new javax.swing.JButton();
        b_servicioLargo = new javax.swing.JButton();
        b_servicioDomicilio = new javax.swing.JButton();
        b_pasarAActivas = new javax.swing.JButton();
        b_eliminarOrden = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        b_cancelarNuevaOrden.setBackground(new java.awt.Color(204, 255, 255));
        b_cancelarNuevaOrden.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_cancelarNuevaOrden.setText("Cancelar");
        b_cancelarNuevaOrden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_cancelarNuevaOrdenMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        t_orden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cant.", "Articulo", "DescripciÃ³n", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(t_orden);
        if (t_orden.getColumnModel().getColumnCount() > 0) {
            t_orden.getColumnModel().getColumn(0).setMinWidth(40);
            t_orden.getColumnModel().getColumn(0).setPreferredWidth(40);
            t_orden.getColumnModel().getColumn(0).setMaxWidth(40);
            t_orden.getColumnModel().getColumn(3).setMinWidth(50);
            t_orden.getColumnModel().getColumn(3).setPreferredWidth(50);
            t_orden.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        b_eliminarDeOrden.setBackground(new java.awt.Color(204, 204, 255));
        b_eliminarDeOrden.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_eliminarDeOrden.setText("Eliminar");
        b_eliminarDeOrden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_eliminarDeOrdenMouseClicked(evt);
            }
        });

        b_imprimir.setBackground(new java.awt.Color(204, 204, 255));
        b_imprimir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_imprimir.setText("Imprimir");
        b_imprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_imprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(b_eliminarDeOrden)
                .addGap(18, 18, 18)
                .addComponent(b_imprimir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_eliminarDeOrden)
                    .addComponent(b_imprimir))
                .addContainerGap())
        );

        b_terminarOrden.setBackground(new java.awt.Color(204, 255, 255));
        b_terminarOrden.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_terminarOrden.setText("Terminar Orden");
        b_terminarOrden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_terminarOrdenMouseClicked(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Articulos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        b_mixto.setBackground(new java.awt.Color(153, 153, 255));
        b_mixto.setText("Mixto");
        b_mixto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_mixtoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_mixtoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_mixtoMouseExited(evt);
            }
        });

        b_cerdo.setBackground(new java.awt.Color(153, 153, 255));
        b_cerdo.setText("Cerdo");
        b_cerdo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_cerdoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_cerdoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_cerdoMouseExited(evt);
            }
        });

        b_cebollas.setBackground(new java.awt.Color(153, 153, 255));
        b_cebollas.setText("Cebollas");
        b_cebollas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_cebollasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_cebollasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_cebollasMouseExited(evt);
            }
        });

        b_bebida.setBackground(new java.awt.Color(153, 153, 255));
        b_bebida.setText("Bebidas");
        b_bebida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_bebidaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_bebidaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_bebidaMouseExited(evt);
            }
        });

        b_tortas.setBackground(new java.awt.Color(153, 153, 255));
        b_tortas.setText("Tortas");
        b_tortas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_tortasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_tortasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_tortasMouseExited(evt);
            }
        });

        b_res.setBackground(new java.awt.Color(153, 153, 255));
        b_res.setText("Res");
        b_res.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_resMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_resMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_resMouseExited(evt);
            }
        });

        b_combinado.setBackground(new java.awt.Color(153, 153, 255));
        b_combinado.setText("Combinado");
        b_combinado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_combinadoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_combinadoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_combinadoMouseExited(evt);
            }
        });

        b_quesadillas.setBackground(new java.awt.Color(153, 153, 255));
        b_quesadillas.setText("Quesadillas");
        b_quesadillas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_quesadillasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_quesadillasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_quesadillasMouseExited(evt);
            }
        });

        b_tacos.setBackground(new java.awt.Color(153, 153, 255));
        b_tacos.setText("Tacos");
        b_tacos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_tacosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_tacosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_tacosMouseExited(evt);
            }
        });

        b_extras.setBackground(new java.awt.Color(153, 153, 255));
        b_extras.setText("Extras");
        b_extras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_extrasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_extrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_extrasMouseExited(evt);
            }
        });

        b_chiles.setBackground(new java.awt.Color(153, 153, 255));
        b_chiles.setText("Chiles");
        b_chiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_chilesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_chilesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_chilesMouseExited(evt);
            }
        });

        b_chorizo.setBackground(new java.awt.Color(153, 153, 255));
        b_chorizo.setText("Chorizo");
        b_chorizo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_chorizoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_chorizoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_chorizoMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_res, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_chorizo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_cerdo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_mixto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_extras, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_combinado, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b_cebollas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_tortas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b_chiles, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_tacos, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b_bebida, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_quesadillas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_mixto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_tacos, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_chiles, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_extras, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b_tortas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b_cebollas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b_quesadillas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b_bebida, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b_res, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_chorizo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_combinado, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cerdo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        tf_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_nombreKeyPressed(evt);
            }
        });

        jLabel2.setText("Referencia");

        l_domicilio.setBackground(new java.awt.Color(255, 255, 255));
        l_domicilio.setText("Domicilio");

        tf_domicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_domicilioKeyPressed(evt);
            }
        });

        b_guardarCliente.setBackground(new java.awt.Color(204, 204, 255));
        b_guardarCliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_guardarCliente.setText("Guardar");
        b_guardarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_guardarClienteMouseClicked(evt);
            }
        });

        l_nombre.setBackground(new java.awt.Color(255, 255, 255));
        l_nombre.setText("Nombre");

        tf_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_telefonoKeyPressed(evt);
            }
        });

        l_telefono.setBackground(new java.awt.Color(255, 255, 255));
        l_telefono.setText("NÃºmero de TelÃ©fono");

        l_idCliente.setText("0");

        b_editarClienteNuevaOrden.setBackground(new java.awt.Color(204, 204, 255));
        b_editarClienteNuevaOrden.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_editarClienteNuevaOrden.setText("Editar");
        b_editarClienteNuevaOrden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_editarClienteNuevaOrdenMouseClicked(evt);
            }
        });

        jLabel1.setText("Id Cliente:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_domicilio)
                            .addComponent(jLabel2)
                            .addComponent(b_guardarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_editarClienteNuevaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(l_nombre)
                    .addComponent(l_telefono)
                    .addComponent(tf_telefono, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(tf_nombre)
                    .addComponent(tf_domicilio)
                    .addComponent(tf_referencia)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30)
                        .addComponent(l_idCliente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_idCliente)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_telefono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_domicilio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_referencia, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_guardarCliente)
                    .addComponent(b_editarClienteNuevaOrden))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ordenes Activas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        t_ordenesActivas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id Cliente", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(t_ordenesActivas);
        if (t_ordenesActivas.getColumnModel().getColumnCount() > 0) {
            t_ordenesActivas.getColumnModel().getColumn(0).setResizable(false);
            t_ordenesActivas.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        t_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Cliente", "Nombre", "Telefono", "Domicilio", "Referencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_clienteKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(t_cliente);
        if (t_cliente.getColumnModel().getColumnCount() > 0) {
            t_cliente.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repartidores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        t_repartidores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(t_repartidores);

        b_pagado.setBackground(new java.awt.Color(204, 255, 204));
        b_pagado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_pagado.setText("Pagado");
        b_pagado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_pagadoMouseClicked(evt);
            }
        });

        b_servicioLargo.setBackground(new java.awt.Color(204, 255, 204));
        b_servicioLargo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_servicioLargo.setText("Servicio Especial");
        b_servicioLargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_servicioLargoMouseClicked(evt);
            }
        });

        b_servicioDomicilio.setBackground(new java.awt.Color(153, 255, 153));
        b_servicioDomicilio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_servicioDomicilio.setText("Servicio Domicilio");
        b_servicioDomicilio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_servicioDomicilioMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b_pagado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_servicioDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_servicioLargo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_pagado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_servicioDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_servicioLargo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        b_pasarAActivas.setBackground(new java.awt.Color(204, 255, 255));
        b_pasarAActivas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_pasarAActivas.setText("Pasar a Activas");
        b_pasarAActivas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_pasarAActivasMouseClicked(evt);
            }
        });

        b_eliminarOrden.setBackground(new java.awt.Color(204, 255, 102));
        b_eliminarOrden.setText("Eliminar Orden");
        b_eliminarOrden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_eliminarOrdenMouseClicked(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Asaderos AdoÃ±o");
        jLabel3.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b_terminarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b_cancelarNuevaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(b_pasarAActivas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(b_eliminarOrden)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(b_terminarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b_cancelarNuevaOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b_pasarAActivas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_eliminarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    String domicilio;
    String nombre;
    String telefono;
    String referencia;
    String cantidadCebollas;
    String cantidadChiles;
    String cantidadTacos;
    String cantidadTortas;
    String cantidadQuesadillas;
    String cantidadExtras;
    
    int cantidadRes;
    int cantidadCerdo;
    int cantidadChorizo;
    int cantidadMixto;
    int cantidadCombinado;
    int cantidadBebida;
    int cantidadTortillas;
    int terminoCarne;
    int eleccionBebida;
    int eleccionTacos;
    int eleccionTorta;
    int eleccionQuesadilla;
    int eleccionExtras;
    int eleccionCombinado;
    int id_cliente;
    
    boolean pagado = false;
    
    JTextPane tp_imprimir = new JTextPane();
    
    String[] cantidadCarne = {"1/2 Kg", "3/4 Kg", "Kg", "OP", "Otra Cantidad"};
    String[] cantidadesChorizo = {"1/2 Kg", "3/4 Kg", "Kg", "OP", "Pieza"};
    String[] opcionesBebidas = {"Jamaica", "Horchata", "Coca 600ml", "Otro"};
    String[] cantidadBebidas = {"1/2 Litro","Litro"};
    String[] opcionesTacos = {"Asada", "Res", "Adobada", "Chorizo", "Mixto", "Promo"};
    String[] opcionesTerminoCarne = {"Medio", "Tres Cuartos", "Bien Asada", "Bien Dorada"};
    String[] opcionesExtras = {"1/2K Tortillas", "1/4K Tortillas", "Frijoles", "Salsa", "Orden Cebollas/Chiles"};
    String[] opcionesTortas = {"Asada", "Res", "Adobada", "Chorizo", "Mixta", "Promo"};
    String[] opcionesQuesadillas = {"Asada", "Res", "Adobada", "Chorizo", "Sencilla"};
    String[] opcionesCombinado = {"Res y Cerdo", "Res y Chorizo", "Cerdo y Chorizo"};
    
    ArrayList<Object> addToTable = new ArrayList<>();
    
    private void b_cancelarNuevaOrdenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cancelarNuevaOrdenMouseClicked
        DefaultTableModel modelo_repartidores = (DefaultTableModel) t_repartidores.getModel();
        DefaultTableModel modelo_clientes = (DefaultTableModel) t_cliente.getModel();
        DefaultTableModel modelo_orden = (DefaultTableModel) t_orden.getModel();
        int idClienteActual = Integer.parseInt(l_idCliente.getText());
        Conexion.eliminarDeOrdenesActivas(idClienteActual);
        Conexion.cancelarOrden();
        new JOptionPane().showMessageDialog(null, "Orden Cancelada", "Orden", JOptionPane.INFORMATION_MESSAGE);
        l_idCliente.setText("0");
        tf_nombre.setText("");
        tf_telefono.setText("");
        tf_domicilio.setText("");
        tf_referencia.setText("");
        modelo_orden.setRowCount(0);
        modelo_repartidores.setRowCount(0);
        modelo_clientes.setRowCount(0);
    }//GEN-LAST:event_b_cancelarNuevaOrdenMouseClicked

    private void b_eliminarDeOrdenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarDeOrdenMouseClicked
        int column = 1;
        int row = t_orden.getSelectedRow();
        String articuloAEliminar = t_orden.getModel().getValueAt(row, column).toString();
        if(articuloAEliminar.equals("Servicio Domicilio")){
            DefaultTableModel model = (DefaultTableModel) t_repartidores.getModel();
            model.setRowCount(0);
        }
        Conexion.eliminarDeOrden(articuloAEliminar);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_eliminarDeOrdenMouseClicked

    private void b_servicioDomicilioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_servicioDomicilioMouseClicked
        Conexion.mostrarRepartidores(t_repartidores);
        Conexion.servicioDomicilio(t_orden);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_servicioDomicilioMouseClicked

    private void b_terminarOrdenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_terminarOrdenMouseClicked
        DefaultTableModel modelo_repartidores = (DefaultTableModel) t_repartidores.getModel();
        DefaultTableModel modelo_clientes = (DefaultTableModel) t_cliente.getModel();
        DefaultTableModel modelo_orden = (DefaultTableModel) t_orden.getModel();
        
        int id_clientex = Integer.parseInt(l_idCliente.getText());
        if(id_clientex==0){
            new JOptionPane().showMessageDialog(null, "Seleccione un Cliente", "Orden", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        int columnaNombre = 0;
        int row = t_repartidores.getSelectedRow();
        String nombreRepartidor = null;
        if(t_repartidores.getRowCount()!=0){
            try{
                nombreRepartidor = t_repartidores.getModel().getValueAt(row, columnaNombre).toString();
            }
            catch(Exception e){
                new JOptionPane().showMessageDialog(null, "Elija un Repartidor", "Orden", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        
        String[] formasDePago = {"Efectivo", "Transferencia"};
        int formaDePagoEleccion = new JOptionPane().showOptionDialog(
            null, "Elige la Forma de Pago", "Forma de Pago", 0, JOptionPane.QUESTION_MESSAGE, null, formasDePago, null);
        String formaDePago = formasDePago[formaDePagoEleccion];
        
        Conexion.terminarOrden(id_clientex, nombreRepartidor, formaDePago, pagado);
        Conexion.eliminarDeOrdenesActivas(id_clientex);
        Conexion.mostrarOrdenesActivas(t_ordenesActivas);
        new JOptionPane().showMessageDialog(null, "Orden Guardada", "Orden", JOptionPane.INFORMATION_MESSAGE);
        l_idCliente.setText("0");
        tf_nombre.setText("");
        tf_telefono.setText("");
        tf_domicilio.setText("");
        tf_referencia.setText("");
        modelo_orden.setRowCount(0);
        modelo_repartidores.setRowCount(0);
        modelo_clientes.setRowCount(0);
        //closeFrame();
    }//GEN-LAST:event_b_terminarOrdenMouseClicked

    private void b_mixtoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_mixtoMouseClicked

        Double cantidad = 1.0;
        int get = 0;
        Double precio = 0.0;
        String termino;
        String articulo;
        cantidadMixto = new JOptionPane().showOptionDialog(
            null, "Elige la Cantidad", "Mixto", 0, JOptionPane.QUESTION_MESSAGE, null, cantidadCarne, null);
        articulo = cantidadCarne[cantidadMixto] + " Mixto             ";
        switch (cantidadMixto){
            case 0:
            get = 14;
            break;
            case 1:
            get = 15;
            break;
            case 2:
            get = 16;
            break;
            case 3:
            get = 17;
            break;
        }
        precio = Conexion.getPrecio(get);
        if(cantidadMixto == 4){
            cantidad = Double.parseDouble(new JOptionPane().showInputDialog("Ingresa la Cantidad en Efectivo"));
            articulo = "Mixto             ";
            get = 60;
            precio = Conexion.getPrecio(get)*cantidad;
        }
        terminoCarne = new JOptionPane().showOptionDialog(
            null, "Elige el TÃ©rmino", "Mixto", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTerminoCarne, null);
        termino = opcionesTerminoCarne[terminoCarne];
        Conexion.agregarAOrden(cantidad, articulo, termino, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_mixtoMouseClicked

    private void b_mixtoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_mixtoMouseEntered
        b_mixto.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_mixtoMouseEntered

    private void b_mixtoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_mixtoMouseExited
        b_mixto.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_mixtoMouseExited

    private void b_cerdoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cerdoMouseClicked

        Double cantidad = 1.0;
        int get = 0;
        Double precio = 0.0;
        String termino;
        String articulo;
        cantidadCerdo = new JOptionPane().showOptionDialog(
            null, "Elige la Cantidad", "Cerdo", 0, JOptionPane.QUESTION_MESSAGE, null, cantidadCarne, null);
        articulo = cantidadCarne[cantidadCerdo] + " Cerdo         ";
        switch (cantidadCerdo) {
            case 0:
            get = 5;
            break;
            case 1:
            get = 6;
            break;
            case 2:
            get = 7;
            break;
            case 3:
            get = 8;
            break;
        }
        precio = Conexion.getPrecio(get);
        if(cantidadCerdo == 4){
            cantidad = Double.parseDouble(new JOptionPane().showInputDialog("Ingresa la Cantidad en Efectivo"));
            articulo = "Cerdo               ";
            get = 59;
            precio = Conexion.getPrecio(get)*cantidad;
        }
        terminoCarne = new JOptionPane().showOptionDialog(
            null, "Elige el TÃ©rmino", "Cerdo", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTerminoCarne, null);
        termino = opcionesTerminoCarne[terminoCarne];
        Conexion.agregarAOrden(cantidad, articulo, termino, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_cerdoMouseClicked

    private void b_cerdoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cerdoMouseEntered
        b_cerdo.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_cerdoMouseEntered

    private void b_cerdoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cerdoMouseExited
        b_cerdo.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_cerdoMouseExited

    private void b_cebollasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cebollasMouseClicked

        Double cantidad;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        int oOP = 0;
        String[] oOPs = {"Orden", "Pieza"};
        oOP = new JOptionPane().showOptionDialog(null, "Orden o Pieza", "Cebollas", 0, JOptionPane.QUESTION_MESSAGE, null, oOPs, null);
        cantidadCebollas = new JOptionPane().showInputDialog("Ingresa la cantidad: ");
        if(oOP == 0){
            get = 30;
        }
        else if(oOP == 1){
            get = 31;
        }
//        if (cantidadCebollas == null  cantidadCebollas.isEmpty()) {
//            return;
//        }
        cantidad = Double.parseDouble(cantidadCebollas);
        articulo = oOPs[oOP] + " Cebollas       ";
        precio = Conexion.getPrecio(get) * cantidad;
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_cebollasMouseClicked

    private void b_cebollasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cebollasMouseEntered
        b_cebollas.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_cebollasMouseEntered

    private void b_cebollasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cebollasMouseExited
        b_cebollas.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_cebollasMouseExited

    private void b_bebidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_bebidaMouseClicked

        Double cantidad = 1.0;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        eleccionBebida = new JOptionPane().showOptionDialog(
            null, "Elige la Bebida", "Bebidas", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesBebidas, null);
        String bebida = opcionesBebidas[eleccionBebida];
        articulo = bebida + "          ";
        if(eleccionBebida == 0 || eleccionBebida == 1){
            cantidadBebida = new JOptionPane().showOptionDialog(
                null, "Elige la Cantidad", "Agua", 0, JOptionPane.QUESTION_MESSAGE, null, cantidadBebidas, null);
            articulo = cantidadBebidas[cantidadBebida]+" "+ bebida;
            if(cantidadBebida == 0){
                get = 52;
            }
            else if(cantidadBebida == 1){
                get = 51;
            }
            precio = Conexion.getPrecio(get)*cantidad;
        }
        else if(eleccionBebida == 2){
            get = 53;
            String cantidadCoca = new JOptionPane().showInputDialog("Ingrese la Cantidad");
            cantidad = Double.parseDouble(cantidadCoca);
            articulo = bebida + "          ";
            precio = Conexion.getPrecio(get)*cantidad;
        }
        else if(eleccionBebida == 3){
            String bebidaOtra = new JOptionPane().showInputDialog("Ingresa el nombre de la bebida");
            cantidad = Double.parseDouble(new JOptionPane().showInputDialog("Ingresa el precio"));
            get = 62;
            precio = Conexion.getPrecio(get)*cantidad;
            articulo = bebidaOtra + "       ";
        }
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_bebidaMouseClicked

    private void b_bebidaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_bebidaMouseEntered
        b_bebida.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_bebidaMouseEntered
 
    private void b_bebidaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_bebidaMouseExited
        b_bebida.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_bebidaMouseExited

    private void b_tortasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_tortasMouseClicked

        Double cantidad;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        eleccionTorta = new JOptionPane().showOptionDialog(
            null, "Elige Clase de Torta", "Tortas", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTortas, null);
        String torta = opcionesTortas[eleccionTorta];
        articulo = "Torta "+torta+"          ";
        switch(eleccionTorta){
            case 0:
            get = 43;
            break;
            case 1:
            get = 44;
            break;
            case 2:
            get = 45;
            break;
            case 3:
            get = 46;
            break;
            case 4:
            get = 63;
            break;
        }
        if(eleccionTorta == 5){
            String[] carneTortaPromo = {"Asada", "Adobada", "Chorizo", "Mixta"};
            int eleccionCarneTortaPromo = new JOptionPane().showOptionDialog(
                null, "Elige Clase de Torta", "Promo Torta", 0, JOptionPane.QUESTION_MESSAGE, null, carneTortaPromo, null);
            String tortaPromo = carneTortaPromo[eleccionCarneTortaPromo];
            articulo = "Promo Torta "+tortaPromo;
            get = 64;
        }
        cantidadTortas = new JOptionPane().showInputDialog("Ingrese la Cantidad");
        cantidad = Double.parseDouble(cantidadTortas);
        precio = Conexion.getPrecio(get)*cantidad;
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_tortasMouseClicked

    private void b_tortasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_tortasMouseEntered
        b_tortas.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_tortasMouseEntered

    private void b_tortasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_tortasMouseExited
        b_tortas.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_tortasMouseExited

    private void b_resMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_resMouseClicked

        Double cantidad = 1.0;
        int get = 0;
        Double precio = 0.0;
        String termino;
        String articulo;
        cantidadRes = new JOptionPane().showOptionDialog(
            null, "Elige la Cantidad", "Res", 0, JOptionPane.QUESTION_MESSAGE, null, cantidadCarne, null);
        articulo = cantidadCarne[cantidadRes] + " Res            ";
        switch (cantidadRes){
            case 0:
            get = 1;
            break;
            case 1:
            get = 2;
            break;
            case 2:
            get = 3;
            break;
            case 3:
            get = 4;
            break;
        }
        precio = Conexion.getPrecio(get);
        if(cantidadRes == 4){
            cantidad = Double.parseDouble(new JOptionPane().showInputDialog("Ingresa la Cantidad en Efectivo"));
            articulo = "Res                 ";
            get = 58;
            precio = Conexion.getPrecio(get)*cantidad;
        }
        terminoCarne = new JOptionPane().showOptionDialog(
            null, "Elige el TÃ©rmino", "Res", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTerminoCarne, null);
        termino = opcionesTerminoCarne[terminoCarne];
        Conexion.agregarAOrden(cantidad, articulo, termino, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);

    }//GEN-LAST:event_b_resMouseClicked

    private void b_resMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_resMouseEntered
        b_res.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_resMouseEntered

    private void b_resMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_resMouseExited
        b_res.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_resMouseExited

    private void b_combinadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_combinadoMouseClicked

        String combinadoTipo = "";
        Double cantidad = 1.0;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        String termino;
        String combinado;
        eleccionCombinado = new JOptionPane().showOptionDialog(
            null, "Elige el Tipo", "Combinado", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesCombinado, null);
        combinado = opcionesCombinado[eleccionCombinado];
        cantidadCombinado = new JOptionPane().showOptionDialog(
            null, "Elige la Cantidad", "Combinado", 0, JOptionPane.QUESTION_MESSAGE, null, cantidadCarne, null);
        switch(eleccionCombinado){
            case 0:
            combinadoTipo = "Res y Cerdo";
            switch(cantidadCombinado){
                case 0:
                get = 18;
                break;
                case 1:
                get = 19;
                break;
                case 2:
                get = 20;
                break;
                case 3:
                get = 21;
                break;
            }
            break;
            case 1:
            combinadoTipo = "Res y Chorizo";
            switch(cantidadCombinado){
                case 0:
                get = 22;
                break;
                case 1:
                get = 23;
                break;
                case 2:
                get = 24;
                break;
                case 3:
                get = 25;
                break;
            }
            break;
            case 2:
            combinadoTipo = "Cerdo Y Chorizo";
            switch(cantidadCombinado){
                case 0:
                get = 26;
                break;
                case 1:
                get = 27;
                break;
                case 2:
                get = 28;
                break;
                case 3:
                get = 29;
                break;
            }
            break;
        }
        precio = Conexion.getPrecio(get);
        articulo = cantidadCarne[cantidadCombinado]+" "+combinado+"     ";
        if(cantidadCombinado == 4){
            cantidad = Double.parseDouble(new JOptionPane().showInputDialog("Ingresa la Cantidad en Efectivo"));
            articulo = combinadoTipo+"       ";
            get = 61;
            precio = Conexion.getPrecio(get)*cantidad;
        }
        terminoCarne = new JOptionPane().showOptionDialog(
            null, "Elige el TÃ©rmino", "Combinado", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTerminoCarne, null);
        termino = opcionesTerminoCarne[terminoCarne];
        Conexion.agregarAOrden(cantidad, articulo, termino, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_combinadoMouseClicked

    private void b_combinadoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_combinadoMouseEntered
        b_combinado.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_combinadoMouseEntered

    private void b_combinadoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_combinadoMouseExited
        b_combinado.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_combinadoMouseExited

    private void b_quesadillasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_quesadillasMouseClicked

        Double cantidad;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        eleccionQuesadilla = new JOptionPane().showOptionDialog(
            null, "Elige Clase de Quesadilla", "Quesadillas", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesQuesadillas, null);
        String quesadilla = opcionesQuesadillas[eleccionQuesadilla];
        articulo = "Quesadilla "+quesadilla+"     ";
        cantidadQuesadillas = new JOptionPane().showInputDialog("Ingrese la Cantidad");
        cantidad = Double.parseDouble(cantidadQuesadillas);
        switch(eleccionQuesadilla){
            case 0:
            get = 47;
            break;
            case 1:
            get = 48;
            break;
            case 2:
            get = 49;
            break;
            case 3:
            get = 50;
            break;
            case 4:
            get = 54;
            break;
        }
        precio = Conexion.getPrecio(get)*cantidad;
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_quesadillasMouseClicked

    private void b_quesadillasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_quesadillasMouseEntered
        b_quesadillas.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_quesadillasMouseEntered

    private void b_quesadillasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_quesadillasMouseExited
        b_quesadillas.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_quesadillasMouseExited

    private void b_tacosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_tacosMouseClicked

        Double cantidad;
        int get = 0;
        Double precio = 0.0;
        String articulo;
        eleccionTacos = new JOptionPane().showOptionDialog(
            null, "Elige Clase de Tacos", "Tacos", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTacos, null);
        String tacos = opcionesTacos[eleccionTacos];
        articulo = "Tacos "+tacos+"          ";
        switch(eleccionTacos){
            case 0:
            get = 38;
            break;
            case 1:
            get = 40;
            break;
            case 2:
            get = 41;
            break;
            case 3:
            get = 42;
            break;
            case 4:
            get = 65;
            break;
        }
        if(eleccionTacos == 5){
            String[] carneTacoPromo = {"Asada", "Adobada", "Chorizo", "Mixto"};
            int eleccionCarneTacoPromo = new JOptionPane().showOptionDialog(
                null, "Elige Clase de Tacos", "Promo Tacos", 0, JOptionPane.QUESTION_MESSAGE, null, carneTacoPromo, null);
            String tacoPromo = carneTacoPromo[eleccionCarneTacoPromo];
            articulo = "Promo Tacos "+tacoPromo;
            get = 39;
        }
        cantidadTacos = new JOptionPane().showInputDialog("Ingrese la Cantidad");
        cantidad = Double.parseDouble(cantidadTacos);
        precio = Conexion.getPrecio(get)*cantidad;
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_tacosMouseClicked

    private void b_tacosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_tacosMouseEntered
        b_tacos.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_tacosMouseEntered

    private void b_tacosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_tacosMouseExited
        b_tacos.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_tacosMouseExited

    private void b_extrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_extrasMouseClicked

        Double cantidad;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        eleccionExtras = new JOptionPane().showOptionDialog(
            null, "Elige el Articulo", "Extras", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesExtras, null);
        String eleccion = opcionesExtras[eleccionExtras];
        articulo = "Extra "+eleccion+"     ";
        cantidadExtras = new JOptionPane().showInputDialog("Ingresa la cantidad: ");
        cantidad = Double.parseDouble(cantidadExtras);
        switch(eleccionExtras){
            case 0:
            get = 36;
            break;
            case 1:
            get = 37;
            break;
            case 2:
            get = 34;
            break;
            case 3:
            get = 35;
            break;
            case 4:
            get = 57;
            break;
        }
        precio = Conexion.getPrecio(get)*cantidad;
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_extrasMouseClicked

    private void b_extrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_extrasMouseEntered
        b_extras.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_extrasMouseEntered

    private void b_extrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_extrasMouseExited
        b_extras.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_extrasMouseExited

    private void b_chilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_chilesMouseClicked

        Double cantidad;
        String articulo;
        int get = 0;
        Double precio = 0.0;
        int oOP = 0;
        String[] oOPs = {"Orden", "Pieza"};
        oOP = new JOptionPane().showOptionDialog(null, "Orden o Pieza", "Chiles", 0, JOptionPane.QUESTION_MESSAGE, null, oOPs, null);
        cantidadChiles = new JOptionPane().showInputDialog("Ingresa la cantidad: ");
        if(oOP == 0){
            get = 32;
        }
        else if(oOP == 1){
            get = 33;
        }
        cantidad = Double.parseDouble(cantidadChiles);
        articulo = oOPs[oOP] + " Chiles         ";
        precio = Conexion.getPrecio(get) * cantidad;
        Conexion.agregarAOrden(cantidad, articulo, null, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_chilesMouseClicked

    private void b_chilesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_chilesMouseEntered
        b_chiles.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_chilesMouseEntered

    private void b_chilesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_chilesMouseExited
        b_chiles.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_chilesMouseExited

    private void b_chorizoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_chorizoMouseClicked

        Double cantidad = 1.0;
        int get = 0;
        Double precio = 0.0;
        String termino;
        String articulo;
        cantidadChorizo = new JOptionPane().showOptionDialog(
            null, "Elige la Cantidad", "Chorizo", 0, JOptionPane.QUESTION_MESSAGE, null, cantidadesChorizo, null);
        articulo = cantidadesChorizo[cantidadChorizo] + " Chorizo        ";
        switch (cantidadChorizo) {
            case 0:
            get = 9;
            break;
            case 1:
            get = 10;
            break;
            case 2:
            get = 11;
            break;
            case 3:
            get = 13;
            break;
            case 4:
            get = 12;
            default:
            break;
        }
        precio = Conexion.getPrecio(get);
        if(cantidadChorizo == 4){
            cantidad = Double.parseDouble(new JOptionPane().showInputDialog("Ingresa la cantidad"));
            precio = precio*cantidad;
        }
        terminoCarne = new JOptionPane().showOptionDialog(
            null, "Elige el TÃ©rmino", "Chorizo", 0, JOptionPane.QUESTION_MESSAGE, null, opcionesTerminoCarne, null);
        termino = opcionesTerminoCarne[terminoCarne];
        Conexion.agregarAOrden(cantidad, articulo, termino, precio, get);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_chorizoMouseClicked

    private void b_chorizoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_chorizoMouseEntered
        b_chorizo.setBackground(new Color(102,153,250));
    }//GEN-LAST:event_b_chorizoMouseEntered

    private void b_chorizoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_chorizoMouseExited
        b_chorizo.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_b_chorizoMouseExited

    private void tf_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_nombreKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_TAB)
        {
            tf_telefono.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
        
        DefaultTableModel model = (DefaultTableModel) t_cliente.getModel();
        model.setRowCount(0);
        nombre = tf_nombre.getText();
        ResultSet rs = Conexion.buscarClienteNombre(nombre);
        try{
            while(rs.next()){
                int id_cliente = rs.getInt("id_cliente");
                String nombre = rs.getString("nombre");
                String telefono = rs.getString("telefono");
                String domicilio = rs.getString("domicilio");
                String referencia = rs.getString("referencia");
                Object[] row = {id_cliente, nombre, telefono, domicilio, referencia};

                model.insertRow(0, row);
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        t_cliente.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2){
            int columnaId = 0;
            int columnaNombre = 1;
            int columnaTelefono = 2;
            int columnaDomicilio = 3;
            int columnaReferencia = 4;
            int row = t_cliente.getSelectedRow();
            
            String idlabel = t_cliente.getModel().getValueAt(row, columnaId).toString();
            String nombretf = t_cliente.getModel().getValueAt(row, columnaNombre).toString();
            String telefonotf = t_cliente.getModel().getValueAt(row, columnaTelefono).toString();
            String domiciliotf = t_cliente.getModel().getValueAt(row, columnaDomicilio).toString();
            String referenciatf = t_cliente.getModel().getValueAt(row, columnaReferencia).toString();
            
            int idClienteActual = Integer.parseInt(l_idCliente.getText());

            tf_nombre.setText(nombretf);
            tf_telefono.setText(telefonotf);
            tf_domicilio.setText(domiciliotf);
            tf_referencia.setText(referenciatf);
            
            if(idClienteActual!=0)
            {
            Conexion.borrarOrden();
            }
            l_idCliente.setText(idlabel);
            Conexion.agregarATableOrden(t_orden);
            Conexion.mostrarTotalOrden(t_orden);
            }
        }
        });
        }
        
    }//GEN-LAST:event_tf_nombreKeyPressed

    private void tf_domicilioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_domicilioKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_TAB)
        {
            tf_referencia.requestFocus();
        }
    }//GEN-LAST:event_tf_domicilioKeyPressed

    private void b_guardarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_guardarClienteMouseClicked
        nombre = tf_nombre.getText();
        domicilio = tf_domicilio.getText();
        telefono = tf_telefono.getText();
        referencia = tf_referencia.getText();
        Conexion.guardarCliente(nombre, domicilio, telefono, referencia);
        int idLabel = Conexion.getIdClienteGuardado(nombre, telefono);
        l_idCliente.setText(""+idLabel);
    }//GEN-LAST:event_b_guardarClienteMouseClicked

    private void tf_telefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_telefonoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_TAB)
        {
            tf_domicilio.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
        
        DefaultTableModel model = (DefaultTableModel) t_cliente.getModel();
        model.setRowCount(0);
        telefono = tf_telefono.getText();
        ResultSet rs = Conexion.buscarClienteTelefono(telefono);
        try{
            while(rs.next()){
                int id_cliente = rs.getInt("id_cliente");
                String nombre = rs.getString("nombre");
                String telefono = rs.getString("telefono");
                String domicilio = rs.getString("domicilio");
                String referencia = rs.getString("referencia");
                Object[] row = {id_cliente, nombre, telefono, domicilio, referencia};

                model.insertRow(0, row);
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        t_cliente.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2){
            int columnaId = 0;
            int columnaNombre = 1;
            int columnaTelefono = 2;
            int columnaDomicilio = 3;
            int columnaReferencia = 4;
            int row = t_cliente.getSelectedRow();
            
            String idlabel = t_cliente.getModel().getValueAt(row, columnaId).toString();
            String nombretf = t_cliente.getModel().getValueAt(row, columnaNombre).toString();
            String telefonotf = t_cliente.getModel().getValueAt(row, columnaTelefono).toString();
            String domiciliotf = t_cliente.getModel().getValueAt(row, columnaDomicilio).toString();
            String referenciatf = t_cliente.getModel().getValueAt(row, columnaReferencia).toString();
            
            int idClienteActual = Integer.parseInt(l_idCliente.getText());
            
            tf_nombre.setText(nombretf);
            tf_telefono.setText(telefonotf);
            tf_domicilio.setText(domiciliotf);
            tf_referencia.setText(referenciatf);
            
            if(idClienteActual!=0)
            {
            Conexion.borrarOrden();
            }
            l_idCliente.setText(idlabel);
            Conexion.agregarATableOrden(t_orden);
            Conexion.mostrarTotalOrden(t_orden);
            }
        }
        });
        }
    }//GEN-LAST:event_tf_telefonoKeyPressed

    private void t_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_clienteKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER);
        int columnaId = 0;
        int columnaNombre = 1;
        int columnaTelefono = 2;
        int columnaDomicilio = 3;
        int columnaReferencia = 4;
        int row = t_cliente.getSelectedRow();
        
        String idl = t_cliente.getModel().getValueAt(row, columnaId).toString();
        String nombretf = t_cliente.getModel().getValueAt(row, columnaNombre).toString();
        String telefonotf = t_cliente.getModel().getValueAt(row, columnaTelefono).toString();
        String domiciliotf = t_cliente.getModel().getValueAt(row, columnaDomicilio).toString();
        String referenciatf = t_cliente.getModel().getValueAt(row, columnaReferencia).toString();
        
        l_idCliente.setText(idl);
        tf_nombre.setText(nombretf);
        tf_telefono.setText(telefonotf);
        tf_domicilio.setText(domiciliotf);
        tf_referencia.setText(referenciatf);
    }//GEN-LAST:event_t_clienteKeyPressed

    private void b_pagadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_pagadoMouseClicked
        if(pagado == false){
            pagado = true;
            b_pagado.setBackground(new Color(255,200,200));
        }
        else if(pagado == true){
            pagado = false;
            b_pagado.setBackground(new Color(204,255,204));
        }
    }//GEN-LAST:event_b_pagadoMouseClicked

    private void b_imprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_imprimirMouseClicked
        DefaultTableModel model = (DefaultTableModel) t_orden.getModel();
        String comentario = new JOptionPane().showInputDialog(null, "Ingresa el comentario: ", "Comentario");
        tp_imprimir.setText("\t    Asaderos AdoÃ±o \n          Tel: 317 109 0065 y 317 690 2451 \n  Domicilio: Calle 20 Noviembre #110 Col. Centro\n               Autlan de Navarro Jalisco\n");
        tp_imprimir.setText(tp_imprimir.getText() + "          Servicio de 12:00 pm a 11:00 pm\n\n");
        tp_imprimir.setText(tp_imprimir.getText() + "-----------------------------------------------------------------\n");
        tp_imprimir.setText(tp_imprimir.getText() + "Cant      " + "\t" + "Articulo  " + "\t\t" + "Precio    " + "\n\n");
        for(int i=0;i<t_orden.getRowCount()-1;i++){
            Double cantidad = Double.parseDouble(model.getValueAt(i, 0).toString());
            String articulo = model.getValueAt(i, 1).toString();
            //String descripcion = model.getValueAt(i, 2).toString();
            Double precio = Double.parseDouble(model.getValueAt(i, 3).toString());
            
            tp_imprimir.setText(tp_imprimir.getText() + cantidad + "\t" + articulo + "\t" + precio + "\n");
        }
        int columnaTotal = 3;
        int rowTotal = t_orden.getRowCount()-1;
        Double total = Double.parseDouble(model.getValueAt(rowTotal, columnaTotal).toString());
        tp_imprimir.setText(tp_imprimir.getText() + "\n" + "Total \t\t\t" + total + "\n");
        tp_imprimir.setText(tp_imprimir.getText() + "-----------------------------------------------------------------\n\n");
        nombre = tf_nombre.getText();
        telefono = tf_telefono.getText();
        domicilio = tf_domicilio.getText();
        referencia = tf_referencia.getText();
        tp_imprimir.setText(
        tp_imprimir.getText() + "Cliente: "+nombre+"\n"+"Telefono: "+telefono+"\n"+"Domicilio: "+domicilio+"\n"+"Referencia: "+referencia+"\n\n"+comentario);
        
        try{tp_imprimir.print();}
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_b_imprimirMouseClicked

    private void b_servicioLargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_servicioLargoMouseClicked
        Conexion.mostrarRepartidores(t_repartidores);
        Conexion.servicioDomicilioLargo(t_orden);
        Conexion.agregarATableOrden(t_orden);
        Conexion.mostrarTotalOrden(t_orden);
    }//GEN-LAST:event_b_servicioLargoMouseClicked

    private void b_editarClienteNuevaOrdenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_editarClienteNuevaOrdenMouseClicked

        int id_clienteEditar = Integer.parseInt(l_idCliente.getText());
        String nombreClienteEditar = tf_nombre.getText();
        String telefonoClienteEditar = tf_telefono.getText();
        String domicilioClienteEditar = tf_domicilio.getText();
        String referenciaClienteEditar = tf_referencia.getText();
        
        Conexion.editarCliente(
                id_clienteEditar, nombreClienteEditar, domicilioClienteEditar, telefonoClienteEditar, referenciaClienteEditar);
   
    }//GEN-LAST:event_b_editarClienteNuevaOrdenMouseClicked

    private void b_pasarAActivasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_pasarAActivasMouseClicked
        int id_clienteActual = Integer.parseInt(l_idCliente.getText());
        if(id_clienteActual!=0)
        { 
        Conexion.actualizarOrdenActiva(id_clienteActual);
        }
        Conexion.borrarOrden();
        DefaultTableModel modelo_repartidores = (DefaultTableModel) t_repartidores.getModel();
        DefaultTableModel modelo_clientes = (DefaultTableModel) t_cliente.getModel();
        DefaultTableModel modelo_orden = (DefaultTableModel) t_orden.getModel();
        l_idCliente.setText("0");
        tf_nombre.setText("");
        tf_telefono.setText("");
        tf_domicilio.setText("");
        tf_referencia.setText("");
        modelo_orden.setRowCount(0);
        modelo_repartidores.setRowCount(0);
        modelo_clientes.setRowCount(0);
        Conexion.mostrarOrdenesActivas(t_ordenesActivas);
    }//GEN-LAST:event_b_pasarAActivasMouseClicked

    private void b_eliminarOrdenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarOrdenMouseClicked
        DefaultTableModel modelo_ordenesActivas = (DefaultTableModel) t_ordenesActivas.getModel();
        int columnaIdCliente = 0;
        int row = t_ordenesActivas.getSelectedRow();
        int idClienteAEliminar = Integer.parseInt(t_ordenesActivas.getModel().getValueAt(row, columnaIdCliente).toString());
        Conexion.eliminarDeOrdenesActivas(idClienteAEliminar);
        Conexion.mostrarOrdenesActivas(t_ordenesActivas);
    }//GEN-LAST:event_b_eliminarOrdenMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevaOrden dialog = new NuevaOrden(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_bebida;
    private javax.swing.JButton b_cancelarNuevaOrden;
    private javax.swing.JButton b_cebollas;
    private javax.swing.JButton b_cerdo;
    private javax.swing.JButton b_chiles;
    private javax.swing.JButton b_chorizo;
    private javax.swing.JButton b_combinado;
    private javax.swing.JButton b_editarClienteNuevaOrden;
    private javax.swing.JButton b_eliminarDeOrden;
    private javax.swing.JButton b_eliminarOrden;
    private javax.swing.JButton b_extras;
    private javax.swing.JButton b_guardarCliente;
    private javax.swing.JButton b_imprimir;
    private javax.swing.JButton b_mixto;
    private javax.swing.JButton b_pagado;
    private javax.swing.JButton b_pasarAActivas;
    private javax.swing.JButton b_quesadillas;
    private javax.swing.JButton b_res;
    private javax.swing.JButton b_servicioDomicilio;
    private javax.swing.JButton b_servicioLargo;
    private javax.swing.JButton b_tacos;
    private javax.swing.JButton b_terminarOrden;
    private javax.swing.JButton b_tortas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel l_domicilio;
    private javax.swing.JLabel l_idCliente;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JLabel l_telefono;
    private javax.swing.JTable t_cliente;
    private javax.swing.JTable t_orden;
    private javax.swing.JTable t_ordenesActivas;
    private javax.swing.JTable t_repartidores;
    private javax.swing.JTextField tf_domicilio;
    private javax.swing.JTextField tf_nombre;
    private javax.swing.JTextField tf_referencia;
    private javax.swing.JTextField tf_telefono;
    // End of variables declaration//GEN-END:variables
}
